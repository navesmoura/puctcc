# Generated by Django 2.1.5 on 2019-02-21 20:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_medico', models.BooleanField(default=False)),
                ('is_paciente', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situacaoConsulta', models.CharField(choices=[('D', 'Disponivel'), ('A', 'Agendada'), ('C', 'Concluida')], max_length=1)),
                ('dtHoraInicial', models.DateTimeField()),
                ('dtHoraFinal', models.DateTimeField()),
                ('queixa', models.TextField(blank=True, null=True)),
                ('receituario', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExameSolicitado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situacaoExame', models.CharField(choices=[('A', 'Aguardando Resultado'), ('C', 'Concluido')], max_length=1)),
                ('dtHoraSolic', models.DateTimeField()),
                ('resultadoTexto', models.TextField(blank=True, null=True)),
                ('resultadoImagem', models.ImageField(blank=True, null=True, upload_to='exames/')),
                ('consulta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinica.Consulta')),
            ],
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomeGenerico', models.CharField(max_length=100, verbose_name='Nome Generico')),
                ('nomeComercial', models.CharField(max_length=100, verbose_name='Nome Comercial')),
                ('fabricante', models.CharField(max_length=100, verbose_name='Fabricante')),
            ],
        ),
        migrations.CreateModel(
            name='TipoExame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
                ('instrucoes', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Gestor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('especialidade', models.CharField(max_length=50)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('planodeSaude', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='examesolicitado',
            name='tipoExame',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clinica.TipoExame'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='examesolicitado',
            name='medico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clinica.Medico'),
        ),
        migrations.AddField(
            model_name='examesolicitado',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clinica.Paciente'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='medico',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinica.Medico'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='paciente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinica.Paciente'),
        ),
    ]
